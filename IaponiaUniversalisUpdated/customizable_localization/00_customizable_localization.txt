#AVIALABLE CUSTOM LOCALISATION KEYS
#When adding new custom loc keys, add them to the appropriate category (or add a new one) and describe them. Name the strings "String_X" where x is its content.
# To not display anything, you can use 'localisation_key = ""'
# Please add one example sentence for each key.

#As this list grow organize with categories.
#Current loc keys in this file:
#GetTributaryOverlord
#GetOldEra
#GetLocalPowerStructure
#GetGovernmentSupporters
#GetNoblesReplacementForOtherGovernments
#GetChurchRank


### Titular for Overlord
#Ex: "On a mission to visit the Son of Heaven"
defined_text = {
    name = GetTributaryOverlord

    text = {
        localisation_key = string_son_of_heaven
        trigger = {
			is_emperor_of_china = yes
            is_female = no
        }
    }
    text = {
        localisation_key = string_daughter_of_heaven
        trigger = {
			is_emperor_of_china = yes
            is_female = yes
        }
    }
	text = {
        localisation_key = string_tributary_overlord_title
        trigger = {
			is_emperor_of_china = no
        }
	}
}

#Old Era
#Ex: "A Medieval Manuscript"
defined_text = {
    name = GetOldEra

    text = {
        localisation_key = string_song_era
        trigger = {
			capital_scope = {
				superregion = china_superregion
			}
        }
    }
	text = {
        localisation_key = string_goguryeo_era
        trigger = {
			capital_scope = {
				region = korea_region
			}
        }
    }
    text = {
        localisation_key = string_middle_ages
        trigger = {
			capital_scope = {
				continent = europe
			}
        }
    }
	text = {
        localisation_key = string_pre_islamic
        trigger = {
			capital_scope = {
				religion_group = muslim
			}
        }
	}
	text = {
        localisation_key = string_vedic
        trigger = {
			capital_scope = {
				religion_group = dharmic
			}
        }
	}
	text = {
        localisation_key = string_ancient_era
        trigger = {
				capital_scope = {
					NOT = { continent = europe }
					NOT = { superregion = china_superregion }
					NOT = { region = korea_region }
					NOT = { religion_group = muslim }
					NOT = { religion_group = dharmic }
				}
        }
	}
}

#Low Level Official
#Ex: "A local Mandarin immediately reacted to the..."
defined_text = {
    name = GetLowLevelOfficialForCountry

    text = {
        localisation_key = string_mandarin
        trigger = {
			culture_group = east_asian #Chinese
        }
    }
    text = {
        localisation_key = string_zamindar
        trigger = {
			religion_group = muslim
			OR = {
				culture_group = eastern_aryan
				culture_group = hindusthani
				culture_group = western_aryan
				culture_group = dravidian
				culture_group = central_indic
			}
        }
    }
	text = {
        localisation_key = string_bey
        trigger = {
			religion_group = muslim
			NOT = {
				culture_group = eastern_aryan
				culture_group = hindusthani
				culture_group = western_aryan
				culture_group = dravidian
				culture_group = central_indic
			}
        }
	}
	text = {
        localisation_key = string_polygar
        trigger = {
			NOT = { religion_group = muslim }
			culture_group = dravidian
        }
	}
	text = {
        localisation_key = string_thakur
        trigger = {
			NOT = { religion_group = muslim }
			OR = {
				culture_group = eastern_aryan
				culture_group = hindusthani
				culture_group = western_aryan
				culture_group = central_indic
			}
        }
	}
	text = {
		localisation_key = string_zupan
		trigger = {
			culture_group = south_slavic
		}
	}
	text = {
		localisation_key = string_bailif
		trigger = {
			OR = {
				culture_group = british
				culture_group = french
				culture_group = germanic
			}
		}
	}
	text = {
		localisation_key = string_bailif
		trigger = {
			OR = {
				culture_group = british
				culture_group = french
				culture_group = germanic
			}
		}
	}
	text = {
		localisation_key = string_ispan
		trigger = {
			culture_group = carpathian
		}
	}
	text = {
        localisation_key = string_official
        trigger = {
			NOT = { religion_group = muslim }
			NOT = {
				culture_group = east_asian
				culture_group = eastern_aryan
				culture_group = hindusthani
				culture_group = western_aryan
				culture_group = dravidian
				culture_group = central_indic
				culture_group = south_slavic
				culture_group = british
				culture_group = french
				culture_group = germanic
			}
        }
	}
}

#A local power structure, such as a court or local parliament
#Ex: "The Court refused our request to hand over the culprits"
#TODO: ADD MORE
defined_text = {
    name = GetLocalPowerStructure

    text = {
        localisation_key = string_court
		trigger = {
			religion_group = christian
		}
    }
	text = {
        localisation_key = string_junta
		trigger = {
			is_year = 1700
			culture_group = iberian
		}
    }
	text = {
		 localisation_key = string_court
		trigger = {
			NOT = { religion_group = christian }
		}
	}
}

#Supporters of the Ruler, be he a Khan, King or President
#Ex: "The Royalists have come to our aid"
defined_text = {
    name = GetGovernmentSupporters

    text = {
        localisation_key = string_royalist
		trigger = {
			government = monarchy
			NOT = { government = steppe_horde }
		}
    }
	text = {
        localisation_key = string_khanzada
		trigger = {
			government = steppe_horde
		}
    }
	text = {
		 localisation_key = string_republican
		trigger = {
			government = republic
		}
	}
	text = {
		 localisation_key = string_clergy
		trigger = {
			government = theocracy
		}
	}
}


#When you need to refer to a ruling social class but cannot be sure you're dealing with a monarchy.
#Ex: "The Nobles are Concerned"
defined_text = {
	name = GetNoblesReplacementForOtherGovernments

	text = {
		localisation_key = string_nobles
		trigger = {
			NOT = { government = republic }
		}
	}
	text = {
		localisation_key = string_influential_families
		trigger = {
			government = republic
		}
	}
}

#Rich or influential Russian Families
#Ex: "The Stroganov Family is offering to fund colonizationin Siberia"
defined_text = {
	name = GetInfluentialRussians

	text = {
		localisation_key = string_stroganov
		trigger = {
			owns = 310
		}
	}
	text = {
		localisation_key = string_khilkov
		trigger = {
			owns = 1945
		}
	}
	text = {
		localisation_key = string_dolgorukov
		trigger = {
			any_owned_province = {
				OR = {
					area = moscow_area
					area = suzdal_area
				}
			}
		}
	}
	text = {
		localisation_key = string_romodanovsky
		trigger = {
			always = yes
		}
	}
	text = {
		localisation_key = string_shuysky
		trigger = {
			always = yes
		}
	}
	text = {
		localisation_key = string_durnovo
		trigger = {
			always = yes
		}
	}
	text = {
		localisation_key = string_romanov
		trigger = {
			NOT = { dynasty = Romanov }
		}
	}
	text = {
		localisation_key = string_golitsyn
		trigger = {
			any_owned_province = {
				OR = {
					region = ruthenia_region
					area = lithuania_area
					area = samogitia_area
				}
			}
		}
	}
	text = {
		localisation_key = string_pahlen
		trigger = {
			any_owned_province = {
				OR = {
					area = livonia_area
					area = hinter_pommern_area
					area = vorpommern_area
				}
			}
		}
	}
	text = {
		localisation_key = string_gantimurov
		trigger = {
			any_owned_province = {
				region = east_siberia_region
				is_state = yes
			}
		}
	}
	text = {
		localisation_key = string_andronikashvili
		trigger = {
			any_owned_province = {
				region = caucasia_region
			}
		}
	}
	text = {
		localisation_key = string_yusupov
		trigger = {
			any_owned_province = {
				area = nogai_area
				is_state = yes
			}
		}
	}
	text = {
		localisation_key = string_sheremetev
		trigger = {
			is_year = 1700
		}
	}
	text = {
		localisation_key = string_shuvalov
		trigger = {
			is_year = 1700
		}
	}
	text = {
		localisation_key = string_demidov
		trigger = {
			is_year = 1700
		}
	}
}

#When you need a random exotic good from Siberia.
#Ex: "We have recieved a gift of valuable gold dust"
defined_text = {
	name = GetRandom_Siberian_Resource

	text = {
		localisation_key = string_gold_dust
		trigger = {
			any_owned_province = {
				OR = {
					region = east_siberia_region
					region = west_siberia_region
					region = ural_region
				}
			}
		}
	}
	text = {
		localisation_key = string_rare_squirrel_coats
		trigger = {
			any_owned_province = {
				OR = {
					region = east_siberia_region
					region = west_siberia_region
					region = ural_region
				}
			}
		}
	}
	text = {
		localisation_key = string_exquisite_sable_fleeces
		trigger = {
			any_owned_province = {
				OR = {
					region = east_siberia_region
					region = west_siberia_region
					region = ural_region
				}
			}
		}
	}
	text = {
		localisation_key = string_ivory_carvings
		trigger = {
			any_owned_province = {
				OR = {
					region = east_siberia_region
					region = west_siberia_region
					region = ural_region
				}
			}
		}
	}
}

### 
#Ex: "Archdiocese of Hosokawa"
defined_text = {
    name = GetChurchRank

    text = {
        localisation_key = church_rank_diocese
        trigger = {
			not = {
                government_rank = 5
            }
        }
    }
    text = {
        localisation_key = church_rank_archdiocese
        trigger = {
			government_rank = 5
        }
    }
}
